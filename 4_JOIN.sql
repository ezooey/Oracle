-- JOIN : 하나 이상의 테이블에서 데이터를 조회하기 위해 사용
-- 사번, 사원명, 부서코드, 부서명 조회
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE; -- ORA-00904: "DEPT_TITLE": 부적합한 식별자
-- EMP_ID, EMP_NAME, DEPT_CODE : EMPLOYEE
-- DEPT_TITLE : DEPARTMENT

SELECT EMP_ID, EMP_NAME, DEPT_CODE
FROM EMPLOYEE;
SELECT DEPT_ID, DEPT_TITLE
FROM DEPARTMENT;
-- 조인 안 하면 불편하다

-- 내부 조인(INNER JOIN) : 조인의 기본
-- 연결되는 컬럼의 값이 일치하는 행들만 조인
-- 오라클 구문
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID; -- 이 둘이 같을 때 연결하겠다

-- ANSI 표준 구문
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
     JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID); -- WHERE절 불요
     
-- 사번, 사원명, 직급코드, 직급명 조회
-- 오라클 구문
SELECT EMP_ID, EMP_NAME, JOB.JOB_CODE, JOB_NAME --여기도 위치 추가해줘야 함(두 테이블 중 아무거나 명시해도 가능)
FROM EMPLOYEE, JOB
WHERE EMPLOYEE.JOB_CODE = JOB.JOB_CODE;
-- 컬럼명이 같을 때는 어디에 있는지 불분명해서 열의 정의가 애매하다는 오류 발생

SELECT EMP_ID, EMP_NAME, J.JOB_CODE, JOB_NAME
FROM EMPLOYEE E, JOB J
WHERE E.JOB_CODE = J.JOB_CODE;
-- 별칭 사용하는 것도 가능

-- ANSI 표준 구문
SELECT EMP_ID, EMP_NAME, EMPLOYEE.JOB_CODE, JOB_NAME
FROM EMPLOYEE
     JOIN JOB ON (JOB.JOB_CODE = EMPLOYEE.JOB_CODE);
-- ON은 보통 컬럼명이 다를 때 사용한다
     
SELECT EMP_ID, EMP_NAME, EMPLOYEE.JOB_CODE, JOB_NAME
FROM EMPLOYEE
     JOIN JOB USING(JOB_CODE);
-- 컬럼명이 같을 때는 ON이 아니라 USING을 사용함

-- 부서명과 해당 부서의 지역명 조회
-- 오라클
SELECT DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT, LOCATION
WHERE LOCATION_ID = LOCAL_CODE;

-- ANSI
SELECT DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT
     JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE);
     
-- 외부조인(OUTER JOIN)
-- LEFT [OUTER] JOIN : 왼편에 기술된 테이블의 컬럼 수를 기준으로 JOIN
-- ANSI
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
     LEFT /*OUTER*/ JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID); -- OUTER 생략 가능
     
-- 오라클
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID(+); 
-- 기준을 맞춰주는 컬럼 쪽에 (+)를 붙이기

-- RIGHT [OUTER] JOIN : 오른편에 기술된 테이블의 컬럼 수를 기준으로 JOIN
-- ANSI
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
     RIGHT /*OUTER*/ JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID);
     
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE(+) = DEPT_ID;

-- FULL [OUTER] JOIN : 두 테이블이 모두 기준이 되는 JOIN
-- ANSI
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
     FULL OUTER JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID);
     
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE(+) = DEPT_ID(+); -- ORA-01468: outer-join된 테이블은 1개만 지정할 수 있습니다
-- FULL OUTER JOIN은 오라클로 표현 불가

-- 다중 조인
-- 사번, 사원명, 부서코드, 부서명, 지역명
-- 오라클
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE, DEPARTMENT, LOCATION
WHERE DEPT_CODE = DEPT_ID
      AND LOCAL_CODE = LOCATION_ID;
-- ANSI
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
     JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID);
     
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
     JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID) -- LOCATION_ID의 위치를 못 찾음(DEPARTMENT에 있기 때문)
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID); 
     --ORA-00904: "LOCATION_ID": 부적합한 식별자
     
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE, LOCAL_NAME
FROM DEPARTMENT
     JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID)
     JOIN EMPLOYEE ON(DEPT_CODE = DEPT_ID);
     
-- 직급이 대리이면서 아시아 지역에 근무하는 직원 조회
-- 사번, 이름, 직급명, 부서명, 근무 지역명, 급여
-- 오라클
SELECT EMP_ID, EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME, SALARY
FROM EMPLOYEE E, LOCATION, JOB J, DEPARTMENT
WHERE E.JOB_CODE = J.JOB_CODE AND E.JOB_NAME = '대리'
      AND DEPT_CODE = DEPT_ID
      AND LOCATION_ID = LOCAL_CODE AND LOCAL_CODE IN ('L1', 'L2', 'L3');
-- ANSI
SELECT EMP_ID, EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME, SALARY
FROM EMPLOYEE
     JOIN JOB USING(JOB_CODE)
     JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
     JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE)
WHERE JOB_NAME = '대리' AND LOCAL_NAME LIKE 'ASIA%';